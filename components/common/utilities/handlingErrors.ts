import {
  PosBusinessError,
  QualificationError
} from "@aptos-scp/scp-component-store-selling-core";
import {
  SSF_CHANGE_GIFT_CARD_NUMBER_MISSING_I18N_CODE,
  SSF_CHANGE_VALUE_CERTIFICATE_NUMBER_MISSING_I18N_CODE,
  SSF_CHANGE_TENDER_ID_MISSING_I18N_CODE,
  SSF_COMPETITIVE_DISCOUNT_WILL_VOID_PREVIOUS_DISCOUNTS_ON_ITEM_I18N_CODE,
  SSF_CUSTOMER_API_ERROR_I18N_CODE,
  SSF_CUSTOMER_NOT_FOUND_I18N_CODE,
  SSF_DIGITAL_SIGNATURE_FAILURE_I18N_CODE,
  SSF_FORFEIT_CHANGE_I18N_CODE,
  SSF_GET_TERMINAL_STATE_API_ERROR_I18N_CODE,
  SSF_GET_TOKEN_IC2_API_ERROR_I18N_CODE,
  SSF_INSUFFICIENT_SUPERVISOR_AUTHORITY_I18N_CODE,
  SSF_INVALID_CREDENTIALS_I18N_CODE,
  SSF_INVENTORY_API_ERROR_I18N_CODE,
  SSF_ITEM_API_ERROR_I18N_CODE,
  SSF_ITEM_DISALLOW_ZERO_PRICE_ENTRY,
  SSF_ITEM_HARD_STOP_I18N_CODE,
  SSF_ITEM_NOT_FOUND_I18N_CODE,
  SSF_ITEM_REQUIRES_PRICE_ENTRY,
  SSF_ITEM_RETURN_CUST_INFO,
  SSF_ITEM_RETURN_REASON_REQUIRED_I18N_CODE,
  SSF_ITEM_SOFT_STOP_I18N_CODE,
  SSF_ITEM_ZERO_PRICED_I18N_CODE,
  SSF_LOYALTY_VOUCHER_API_ERROR_I18N_CODE,
  SSF_MANUAL_DISCOUNT_COMPETITIVE_PRICE_PRIOR_PRICE_OVERRIDE_I18N_CODE,
  SSF_MANUAL_DISCOUNT_NEW_PRICE_PRIOR_PRICE_OVERRIDE_I18N_CODE,
  SSF_MEMBER_NOT_ALLOWED_I18N_CODE,
  SSF_NEW_PRICE_DISCOUNT_WILL_VOID_PREVIOUS_DISCOUNTS_ON_ITEM_I18N_CODE,
  SSF_NONINTEGRATED_AUTHORIZATION_MISSING_I18N_CODE,
  SSF_NON_FISCAL_ERROR,
  SSF_ORDERS_API_ERROR_CODE,
  SSF_ORDERS_API_ERROR_NO_ORDERS_I18N_CODE,
  SSF_PASSWORD_CHANGE_REQUIRED_I18N_CODE,
  SSF_PASSWORD_CHANGE_WARNING_I18N_CODE,
  SSF_PASSWORD_EXPIRED_I18N_CODE,
  SSF_PATCH_TAX_REFUND_API_ERROR_I18N_CODE,
  SSF_PAYMENT_DEVICE_AUTH_TIMEOUT_I18N_CODE,
  SSF_PRINTER_DEVICE_ERROR,
  SSF_RESTRICTED_SAME_DISCOUNT_EVENT_I18N_CODE,
  SSF_SECURITY_ROLE_MISSING_I18N_CODE,
  SSF_SINGLE_USE_COUPON_CANNOT_ACCEPT_I18N_CODE,
  SSF_SINGLE_USE_COUPON_EXPIRED_I18N_CODE,
  SSF_SINGLE_USE_COUPON_INVALID_I18N_CODE,
  SSF_SINGLE_USE_COUPON_REQUIRES_VALID_CUSTOMER_NUMBER_I18N_CODE,
  SSF_SUPERVISOR_IDENTITY_REQUIRED_I18N_CODE,
  SSF_SUPERVISOR_INVALID_CREDENTIAL_I18N_CODE,
  SSF_SUPERVISOR_QUALIFICATION_ERROR_I18N_CODE,
  SSF_TAX_REFUND_ERROR_I18N_CODE,
  SSF_TENDER_OVER_MAX_AMOUNT_I18N_CODE,
  SSF_TENDER_REFERENCE_DATA_MISSING_I18N_CODE,
  SSF_TENDER_SOFT_MAX_AMOUNT_I18N_CODE,
  SSF_TILL_OVER_ACCEPTABLE_VARIANCE_I18N_CODE,
  SSF_TRANSACTION_FOR_RETURN_COUNTRY_MISMATCH_I18N_CODE,
  SSF_TRANSACTION_HISTORY_OFFLINE_ERROR_I18N_CODE,
  SSF_USER_LOCKOUT_I18N_CODE,
  SSF_AUTHORIZATION_DEVICE_ID_MISSING_I18N_CODE
} from "@aptos-scp/scp-component-store-selling-features";

import { BusinessState } from "../../../reducers/businessState";

const attendedErrors = [
  SSF_AUTHORIZATION_DEVICE_ID_MISSING_I18N_CODE,
  SSF_COMPETITIVE_DISCOUNT_WILL_VOID_PREVIOUS_DISCOUNTS_ON_ITEM_I18N_CODE,
  SSF_NEW_PRICE_DISCOUNT_WILL_VOID_PREVIOUS_DISCOUNTS_ON_ITEM_I18N_CODE,
  SSF_CHANGE_GIFT_CARD_NUMBER_MISSING_I18N_CODE,
  SSF_CHANGE_VALUE_CERTIFICATE_NUMBER_MISSING_I18N_CODE,
  SSF_CHANGE_TENDER_ID_MISSING_I18N_CODE,
  SSF_CUSTOMER_API_ERROR_I18N_CODE,
  SSF_GET_TERMINAL_STATE_API_ERROR_I18N_CODE,
  SSF_INVALID_CREDENTIALS_I18N_CODE,
  SSF_INVENTORY_API_ERROR_I18N_CODE,
  SSF_ITEM_API_ERROR_I18N_CODE,
  SSF_ITEM_HARD_STOP_I18N_CODE,
  SSF_ITEM_NOT_FOUND_I18N_CODE,
  SSF_ITEM_REQUIRES_PRICE_ENTRY,
  SSF_ITEM_RETURN_CUST_INFO,
  SSF_ITEM_RETURN_REASON_REQUIRED_I18N_CODE,
  SSF_ITEM_SOFT_STOP_I18N_CODE,
  SSF_ITEM_ZERO_PRICED_I18N_CODE,
  SSF_LOYALTY_VOUCHER_API_ERROR_I18N_CODE,
  SSF_NONINTEGRATED_AUTHORIZATION_MISSING_I18N_CODE,
  SSF_PASSWORD_CHANGE_REQUIRED_I18N_CODE,
  SSF_PASSWORD_CHANGE_WARNING_I18N_CODE,
  SSF_PASSWORD_EXPIRED_I18N_CODE,
  SSF_RESTRICTED_SAME_DISCOUNT_EVENT_I18N_CODE,
  SSF_SECURITY_ROLE_MISSING_I18N_CODE,
  SSF_SINGLE_USE_COUPON_CANNOT_ACCEPT_I18N_CODE,
  SSF_SINGLE_USE_COUPON_EXPIRED_I18N_CODE,
  SSF_SINGLE_USE_COUPON_INVALID_I18N_CODE,
  SSF_INSUFFICIENT_SUPERVISOR_AUTHORITY_I18N_CODE,
  SSF_SINGLE_USE_COUPON_REQUIRES_VALID_CUSTOMER_NUMBER_I18N_CODE,
  SSF_SUPERVISOR_IDENTITY_REQUIRED_I18N_CODE,
  SSF_SUPERVISOR_INVALID_CREDENTIAL_I18N_CODE,
  SSF_SUPERVISOR_QUALIFICATION_ERROR_I18N_CODE,
  SSF_TENDER_OVER_MAX_AMOUNT_I18N_CODE,
  SSF_TENDER_REFERENCE_DATA_MISSING_I18N_CODE,
  SSF_TENDER_SOFT_MAX_AMOUNT_I18N_CODE,
  SSF_TRANSACTION_HISTORY_OFFLINE_ERROR_I18N_CODE,
  SSF_USER_LOCKOUT_I18N_CODE,
  SSF_ORDERS_API_ERROR_CODE,
  SSF_ORDERS_API_ERROR_NO_ORDERS_I18N_CODE,
  SSF_ITEM_DISALLOW_ZERO_PRICE_ENTRY,
  SSF_TILL_OVER_ACCEPTABLE_VARIANCE_I18N_CODE,
  SSF_MANUAL_DISCOUNT_COMPETITIVE_PRICE_PRIOR_PRICE_OVERRIDE_I18N_CODE,
  SSF_MANUAL_DISCOUNT_NEW_PRICE_PRIOR_PRICE_OVERRIDE_I18N_CODE,
  SSF_DIGITAL_SIGNATURE_FAILURE_I18N_CODE,
  SSF_TRANSACTION_FOR_RETURN_COUNTRY_MISMATCH_I18N_CODE,
  SSF_FORFEIT_CHANGE_I18N_CODE
];

const unattendedErrors = [
  SSF_CUSTOMER_NOT_FOUND_I18N_CODE,
  SSF_MEMBER_NOT_ALLOWED_I18N_CODE
];

export function shouldHandleErrorSeparately(error: PosBusinessError): boolean {
  return attendedErrors.indexOf(error.localizableMessage.i18nCode) >= 0;
}

export function shouldHandleUnattendedErrorSeparately(currentBusinessState: BusinessState,
                                                      error: PosBusinessError): boolean {
  return currentBusinessState && currentBusinessState.stateValues &&
      currentBusinessState.stateValues.get("UserSession.unattended") &&
      (unattendedErrors.indexOf(error.localizableMessage.i18nCode) >= 0);
}

const PostVoidExpectedErrors = [
  SSF_ITEM_REQUIRES_PRICE_ENTRY,
  SSF_SUPERVISOR_IDENTITY_REQUIRED_I18N_CODE,
  SSF_SUPERVISOR_INVALID_CREDENTIAL_I18N_CODE,
  SSF_SUPERVISOR_QUALIFICATION_ERROR_I18N_CODE
];
export function shouldHandlePostVoidErrorSeparately(error: PosBusinessError): boolean {
  return PostVoidExpectedErrors.some((val) => error.localizableMessage.i18nCode === val);
}

export function currentSceneHandlesNotifications(sceneName: string, notificationCode: string): boolean {
  return sceneName === "balanceInquiry" ||
         sceneName === "tenderExchange" ||
         sceneName === "subscriptionAuthorization" ||
         sceneName === "valueCertificate" ||
         taxRefundNotificationHandlers(sceneName, notificationCode);
}

export function messageForcesNotification(i18nCode: string, sceneName: string): boolean {
  return i18nCode === SSF_PRINTER_DEVICE_ERROR
          || (i18nCode === SSF_PAYMENT_DEVICE_AUTH_TIMEOUT_I18N_CODE && sceneName !== "valueCertificate")
          || i18nCode === SSF_NON_FISCAL_ERROR
          || i18nCode === SSF_FORFEIT_CHANGE_I18N_CODE
          || i18nCode === SSF_AUTHORIZATION_DEVICE_ID_MISSING_I18N_CODE;
}

export function taxRefundNotificationHandlers(sceneName: string, i18nCode: string): boolean {
  return (sceneName === "assignSalesperson" || sceneName === "customer" || sceneName === "returnDetails") &&
      taxRefundErrorCodes(i18nCode);
}


export function taxRefundErrorCodes(i18nCode: string): boolean {
  return (i18nCode === SSF_GET_TOKEN_IC2_API_ERROR_I18N_CODE ||
    i18nCode === SSF_PATCH_TAX_REFUND_API_ERROR_I18N_CODE ||
    i18nCode === SSF_TAX_REFUND_ERROR_I18N_CODE);
}

export function didQualificationErrorWithoutRequiredInputsOccur(prevBusinessState: BusinessState,
                                                                currentBusinessState: BusinessState): boolean {
  return currentBusinessState.error && prevBusinessState.inProgress &&
      currentBusinessState.error instanceof QualificationError &&
      currentBusinessState.error.requiredInputs?.length === 0;
}
